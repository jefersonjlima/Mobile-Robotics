variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - pdf
  - pages

pdf_stage:
  stage: pdf
  image: timnn/texlive  # use a Docker image for LaTeX from https://hub.docker.com/
  script:
    # upadate submodules
    - git submodule update --remote --recursive
    - tex --version
    # - export RM_REFERENCES=$(find $PWD -type f | grep "references.bib")
    - export RM_HOME_PATH=$PWD
    - mkdir ./images
    - find ./ -name '*_image.tex' -exec mv -t ./images {} \;
    - find ./ -name '*.jpeg' -exec mv -t ./images {} \;
    - find ./ -name '*.jpg' -exec mv  -t ./images {} \;
    - find ./ -name '*.png' -exec mv  -t ./images {} \;
#    - find ./ -name '*.ipynb' -exec mv  -t ./public {} \;
    - cp 1-introduction-mobile-robots/beamerthemesimple.sty ./
    - cp notes/krantz.cls ./
    - ls
    - find ./ -name '*aula.tex' -exec pdflatex {} \;
    - find ./ -name '*aula.aux' -exec bibtex {} \;
    - find ./ -name '*aula.tex' -exec pdflatex {} \;
    - find ./ -name '*aula.tex' -exec pdflatex {} \;
    - find ./ -name '*.pdf' -exec mv -t ./public {} \;
    - find ./ -name '*.log' -exec mv -t ./public {} \;
    - ls ./public/
  artifacts:
    paths: 
      - public  
  only:
    - master

pages:
  stage: pages
  image: alpine:latest
  script:
    - echo 'deploy page!!!'
    - ls ./public/
  artifacts:
    paths:
    - public
  only:
  - master
